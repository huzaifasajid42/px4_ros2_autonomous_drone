import os
from launch import LaunchDescription
from launch_ros.actions import Node
from launch.actions import DeclareLaunchArgument, ExecuteProcess, TimerAction
from launch.substitutions import LaunchConfiguration, PathJoinSubstitution

def generate_launch_description():

    hold_time_arg = DeclareLaunchArgument(
        'hold_time',
        default_value='3.0',
        description='Time to hold at each waypoint (seconds)'
    )
    mission_alt_arg = DeclareLaunchArgument(
        'mission_altitude',
        default_value='5.0',
        description='Mission altitude (meters) for all waypoints'
    )

    mavros_node = Node(
        package='mavros',
        executable='mavros_node',
        name='mavros',
        output='screen',
        parameters=[{
            'fcu_url': 'udp://:14540@127.0.0.1:14557', # Standard PX4 SITL URL
            'gcs_url': '', # Disable Ground Control Station link
            'target_system_id': 1,
            'target_component_id': 1,
            'fcu_protocol': 'v2.0'
        }]
    )

    mission_controller_node = Node(
        package='drone_controller',
        executable='my_working_node.py',
        name='drone_controller_node',
        output='screen',
        parameters=[{
            # Use the launch arguments here
            'hold_time': LaunchConfiguration('hold_time'),
            'mission_altitude': LaunchConfiguration('mission_altitude'),
            # Waypoints are hardcoded in the launch file for simplicity
            'waypoints': [
                [0.0, 0.0, 5.0],
                [5.0, 0.0, 5.0],
                [5.0, 5.0, 5.0],
                [0.0, 5.0, 5.0],
                [0.0, 0.0, 5.0]
            ]
        }]
    )

    return LaunchDescription([
        hold_time_arg,
        mission_alt_arg,
        mavros_node,
        mission_controller_node,
    ])